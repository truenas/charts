{
    "1.7.23": {
        "healthy": true,
        "supported": true,
        "healthy_error": null,
        "location": "/__w/charts/charts/charts/minio/1.7.23",
        "last_update": "2024-01-23 12:44:43",
        "required_features": [
            "definitions/certificate",
            "normalize/ixVolume"
        ],
        "human_version": "2023-03-13_1.7.23",
        "version": "1.7.23",
        "chart_metadata": {
            "name": "minio",
            "description": "High Performance, Kubernetes Native Object Storage",
            "annotations": {
                "title": "MinIO"
            },
            "type": "application",
            "version": "1.7.23",
            "apiVersion": "v2",
            "appVersion": "2023-03-13",
            "kubeVersion": ">=1.16.0-0",
            "maintainers": [
                {
                    "name": "truenas",
                    "url": "https://www.truenas.com/",
                    "email": "dev@ixsystems.com"
                }
            ],
            "dependencies": [
                {
                    "name": "common",
                    "repository": "file://../../../common/2304.0.1",
                    "version": "2304.0.1"
                }
            ],
            "home": "https://min.io",
            "icon": "https://media.sys.truenas.net/apps/minio/icons/icon.png",
            "sources": [
                "https://github.com/minio/minio",
                "https://github.com/minio/charts"
            ],
            "keywords": [
                "storage",
                "object-storage",
                "S3"
            ]
        },
        "app_metadata": null,
        "schema": {
            "groups": [
                {
                    "name": "Container Images",
                    "description": "Image to be used for container"
                },
                {
                    "name": "Workload Configuration",
                    "description": "Configure workload deployment"
                },
                {
                    "name": "Minio Configuration",
                    "description": "Configure Minio credentials"
                },
                {
                    "name": "Storage",
                    "description": "Configure Storage for Nextcloud"
                },
                {
                    "name": "Advanced DNS Settings",
                    "description": "Configure DNS settings"
                },
                {
                    "name": "Resource Limits",
                    "description": "Set CPU/memory limits for Kubernetes Pod"
                }
            ],
            "portals": {
                "web_portal": {
                    "protocols": [
                        "$kubernetes-resource_configmap_minio-config_protocol"
                    ],
                    "host": [
                        "$node_ip"
                    ],
                    "ports": [
                        "$variable-service.consolePort"
                    ]
                }
            },
            "questions": [
                {
                    "variable": "dnsConfig",
                    "label": "DNS Configuration",
                    "group": "Advanced DNS Settings",
                    "schema": {
                        "type": "dict",
                        "attrs": [
                            {
                                "variable": "options",
                                "label": "DNS Options",
                                "schema": {
                                    "type": "list",
                                    "items": [
                                        {
                                            "variable": "optionsEntry",
                                            "label": "Option Entry Configuration",
                                            "schema": {
                                                "type": "dict",
                                                "attrs": [
                                                    {
                                                        "variable": "name",
                                                        "label": "Option Name",
                                                        "schema": {
                                                            "type": "string",
                                                            "required": true
                                                        }
                                                    },
                                                    {
                                                        "variable": "value",
                                                        "label": "Option Value",
                                                        "schema": {
                                                            "type": "string",
                                                            "required": true
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "updateStrategy",
                    "label": "Minio update strategy",
                    "group": "Workload Configuration",
                    "schema": {
                        "type": "string",
                        "default": "Recreate",
                        "enum": [
                            {
                                "value": "RollingUpdate",
                                "description": "Create new pods and then kill old ones"
                            },
                            {
                                "value": "Recreate",
                                "description": "Kill existing pods before creating new ones"
                            }
                        ]
                    }
                },
                {
                    "variable": "distributedMode",
                    "label": "Enable Distributed Mode",
                    "description": "Run Minio instance to connect to a distributed minio cluster",
                    "group": "Minio Configuration",
                    "schema": {
                        "type": "boolean",
                        "default": false,
                        "show_subquestions_if": true,
                        "subquestions": [
                            {
                                "variable": "distributedIps",
                                "label": "Distributed Minio Instance URI(s)",
                                "schema": {
                                    "type": "list",
                                    "required": true,
                                    "default": [],
                                    "items": [
                                        {
                                            "variable": "ip",
                                            "label": "Distributed Minio Instance URI",
                                            "schema": {
                                                "type": "string",
                                                "empty": false
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "extraArgs",
                    "label": "Minio Extra Arguments",
                    "group": "Minio Configuration",
                    "schema": {
                        "type": "list",
                        "default": [],
                        "items": [
                            {
                                "variable": "arg",
                                "label": "Argument",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "accessKey",
                    "label": "Root User",
                    "group": "Minio Configuration",
                    "description": "Enter the S3 Root User",
                    "schema": {
                        "type": "string",
                        "private": true,
                        "required": true,
                        "min_length": 5,
                        "max_length": 20
                    }
                },
                {
                    "variable": "secretKey",
                    "label": "Root Password",
                    "group": "Minio Configuration",
                    "description": "Enter the S3 Root Password",
                    "schema": {
                        "type": "string",
                        "private": true,
                        "required": true,
                        "min_length": 8,
                        "max_length": 40
                    }
                },
                {
                    "variable": "environmentVariables",
                    "label": "Minio image environment",
                    "group": "Minio Configuration",
                    "schema": {
                        "type": "list",
                        "default": [],
                        "items": [
                            {
                                "variable": "environmentVariable",
                                "label": "Environment Variable",
                                "schema": {
                                    "type": "dict",
                                    "attrs": [
                                        {
                                            "variable": "name",
                                            "label": "Name",
                                            "schema": {
                                                "type": "string"
                                            }
                                        },
                                        {
                                            "variable": "value",
                                            "label": "Value",
                                            "schema": {
                                                "type": "string"
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "service",
                    "description": "Minio Service Configuration",
                    "label": "Minio Service Configuration",
                    "group": "Minio Configuration",
                    "schema": {
                        "type": "dict",
                        "required": true,
                        "attrs": [
                            {
                                "variable": "nodePort",
                                "label": "Node Port to use for Minio API",
                                "schema": {
                                    "type": "int",
                                    "min": 9000,
                                    "max": 65535,
                                    "default": 9000,
                                    "required": true
                                }
                            },
                            {
                                "variable": "consolePort",
                                "label": "Node Port to use for Minio UI Access",
                                "schema": {
                                    "type": "int",
                                    "min": 9000,
                                    "max": 65535,
                                    "default": 9002,
                                    "required": true
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "certificate",
                    "description": "Minio Certificate",
                    "label": "Minio Certificate",
                    "group": "Minio Configuration",
                    "schema": {
                        "type": "int",
                        "$ref": [
                            "definitions/certificate"
                        ],
                        "enum": [
                            {
                                "value": null,
                                "description": "No Certificate"
                            }
                        ],
                        "default": null,
                        "null": true
                    }
                },
                {
                    "variable": "minioDomain",
                    "label": "Minio Domain Name",
                    "description": "Depending on your setup/environment, you may need to leave this blank.\nCheck MinIO documentation for more information.\n",
                    "group": "Minio Configuration",
                    "schema": {
                        "type": "string",
                        "default": null,
                        "null": true,
                        "show_if": [
                            [
                                "certificate",
                                "!=",
                                null
                            ]
                        ]
                    }
                },
                {
                    "variable": "logsearchapi",
                    "label": "Log Search API Configuration",
                    "description": "Log Search API Configuration",
                    "group": "Minio Configuration",
                    "schema": {
                        "type": "dict",
                        "attrs": [
                            {
                                "variable": "enabled",
                                "label": "Enable Log Search API",
                                "description": "Enables Log Search API and configures MinIO to use it. It also deploys a postgres DB for it.",
                                "schema": {
                                    "type": "boolean",
                                    "default": false
                                }
                            },
                            {
                                "variable": "diskCapacityGB",
                                "label": "Disk Capacity in GB",
                                "description": "Capacity in GB that logs are allowed to occupy.",
                                "schema": {
                                    "type": "int",
                                    "show_if": [
                                        [
                                            "enabled",
                                            "=",
                                            true
                                        ]
                                    ],
                                    "default": 5
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "appVolumeMounts",
                    "label": "Minio Storage",
                    "group": "Storage",
                    "schema": {
                        "type": "dict",
                        "show_if": [
                            [
                                "distributedMode",
                                "=",
                                false
                            ]
                        ],
                        "attrs": [
                            {
                                "variable": "export",
                                "label": "Data Volume",
                                "schema": {
                                    "type": "dict",
                                    "attrs": [
                                        {
                                            "variable": "datasetName",
                                            "label": "Minio Data Volume Name",
                                            "schema": {
                                                "type": "string",
                                                "hidden": true,
                                                "$ref": [
                                                    "normalize/ixVolume"
                                                ],
                                                "show_if": [
                                                    [
                                                        "hostPathEnabled",
                                                        "=",
                                                        false
                                                    ]
                                                ],
                                                "default": "ix-minio",
                                                "editable": false
                                            }
                                        },
                                        {
                                            "variable": "mountPath",
                                            "label": "Minio Data Mount Path",
                                            "description": "Path where the volume will be mounted inside the pod",
                                            "schema": {
                                                "type": "path",
                                                "default": "/export",
                                                "immutable": true
                                            }
                                        },
                                        {
                                            "variable": "hostPathEnabled",
                                            "label": "Enable Host Path for Minio Data Volume",
                                            "schema": {
                                                "type": "boolean",
                                                "default": false,
                                                "show_subquestions_if": true,
                                                "subquestions": [
                                                    {
                                                        "variable": "hostPath",
                                                        "label": "Host Path for Minio Data Volume",
                                                        "schema": {
                                                            "type": "hostpath",
                                                            "required": true,
                                                            "immutable": true
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "extraAppVolumeMounts",
                    "label": "Extra Host Path Volumes",
                    "group": "Storage",
                    "schema": {
                        "type": "list",
                        "items": [
                            {
                                "variable": "extraAppVolume",
                                "label": "Host Path Volume",
                                "description": "Add an extra host path volume for Minio application",
                                "schema": {
                                    "type": "dict",
                                    "attrs": [
                                        {
                                            "variable": "mountPath",
                                            "label": "Mount Path in Pod",
                                            "description": "Path where the volume will be mounted inside the pod",
                                            "schema": {
                                                "type": "path",
                                                "required": true
                                            }
                                        },
                                        {
                                            "variable": "hostPath",
                                            "label": "Host Path",
                                            "description": "Host path",
                                            "schema": {
                                                "type": "hostpath",
                                                "required": true
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "postgresAppVolumeMounts",
                    "label": "Postgres Storage",
                    "group": "Storage",
                    "schema": {
                        "type": "dict",
                        "attrs": [
                            {
                                "variable": "postgres-data",
                                "label": "Postgres Data Volume",
                                "schema": {
                                    "type": "dict",
                                    "attrs": [
                                        {
                                            "variable": "datasetName",
                                            "label": "Postgres Data Volume Name",
                                            "schema": {
                                                "type": "string",
                                                "hidden": true,
                                                "$ref": [
                                                    "normalize/ixVolume"
                                                ],
                                                "default": "ix-postgres_data",
                                                "show_if": [
                                                    [
                                                        "hostPathEnabled",
                                                        "=",
                                                        false
                                                    ]
                                                ],
                                                "editable": false
                                            }
                                        },
                                        {
                                            "variable": "mountPath",
                                            "label": "Postgresql Data Mount Path",
                                            "description": "Path where the volume will be mounted inside the pod",
                                            "schema": {
                                                "type": "path",
                                                "hidden": true,
                                                "editable": false,
                                                "default": "/var/lib/postgresql/data"
                                            }
                                        },
                                        {
                                            "variable": "hostPathEnabled",
                                            "label": "Enable Host Path for Postgres Data Volume",
                                            "schema": {
                                                "type": "boolean",
                                                "default": false,
                                                "show_subquestions_if": true,
                                                "subquestions": [
                                                    {
                                                        "variable": "hostPath",
                                                        "label": "Host Path for Postgres Data Volume",
                                                        "schema": {
                                                            "type": "hostpath",
                                                            "required": true,
                                                            "immutable": true
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            },
                            {
                                "variable": "postgres-backup",
                                "label": "Postgres Backup Volume",
                                "schema": {
                                    "type": "dict",
                                    "attrs": [
                                        {
                                            "variable": "datasetName",
                                            "label": "Postgres Backup Volume Name",
                                            "schema": {
                                                "type": "string",
                                                "hidden": true,
                                                "$ref": [
                                                    "normalize/ixVolume"
                                                ],
                                                "default": "ix-postgres_backups",
                                                "show_if": [
                                                    [
                                                        "hostPathEnabled",
                                                        "=",
                                                        false
                                                    ]
                                                ],
                                                "editable": false
                                            }
                                        },
                                        {
                                            "variable": "mountPath",
                                            "label": "Postgresql Backup Mount Path",
                                            "description": "Path where the volume will be mounted inside the pod",
                                            "schema": {
                                                "type": "path",
                                                "hidden": true,
                                                "editable": false,
                                                "default": "/postgres_backups"
                                            }
                                        },
                                        {
                                            "variable": "hostPathEnabled",
                                            "label": "Enable Host Path for Postgres Backup Volume",
                                            "schema": {
                                                "type": "boolean",
                                                "default": false,
                                                "show_subquestions_if": true,
                                                "subquestions": [
                                                    {
                                                        "variable": "hostPath",
                                                        "label": "Host Path for Postgres Backup Volume",
                                                        "schema": {
                                                            "type": "hostpath",
                                                            "required": true
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                {
                    "variable": "enableResourceLimits",
                    "label": "Enable Pod resource limits",
                    "group": "Resource Limits",
                    "schema": {
                        "type": "boolean",
                        "default": false
                    }
                },
                {
                    "variable": "cpuLimit",
                    "label": "CPU Limit",
                    "description": "CPU resource limit allow plain integer values with suffix m(milli) e.g 1000m, 100.",
                    "group": "Resource Limits",
                    "schema": {
                        "type": "string",
                        "show_if": [
                            [
                                "enableResourceLimits",
                                "=",
                                true
                            ]
                        ],
                        "valid_chars": "^\\d+(?:\\.\\d+(?!.*m$)|m?$)",
                        "default": "4000m"
                    }
                },
                {
                    "variable": "memLimit",
                    "label": "Memory Limit",
                    "group": "Resource Limits",
                    "description": "Memory limits is specified by number of bytes. Followed by quantity suffix like E,P,T,G,M,k and Ei,Pi,Ti,Mi,Gi,Ki can also be used. e.g 129e6, 129M,  128974848000m, 123Mi",
                    "schema": {
                        "type": "string",
                        "show_if": [
                            [
                                "enableResourceLimits",
                                "=",
                                true
                            ]
                        ],
                        "valid_chars": "^([+-]?[0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$",
                        "default": "8Gi"
                    }
                }
            ]
        },
        "app_readme": "<p><a href=\"https://min.io\">MinIO</a> is a High Performance Object Storage released under Apache License v2.0. It is API compatible with Amazon S3 cloud storage service. Use MinIO to build high performance infrastructure for machine learning, analytics and application data workloads.</p>\n<p><strong>NOTE</strong>\n- On installation, minIO data directory's ownership will be updated to minio:minio.\n- For existing installations that are exhibiting the upgrade to &gt;=1.5.0, the minIO data directory's ownership will be migrated to minio:minio.</p>",
        "detailed_readme": "<h1>MinIO</h1>\n<p><a href=\"https://min.io\">MinIO</a> is a High Performance Object Storage released under Apache License v2.0. It is API compatible with Amazon S3 cloud storage service. Use MinIO to build high performance infrastructure for machine learning, analytics and application data workloads.</p>\n<p>MinIO supports <a href=\"https://docs.minio.io/docs/distributed-minio-quickstart-guide\">distributed mode</a>. In distributed mode, you can pool multiple drives (even on different machines) into a single object storage server.</p>\n<p>For more detailed documentation please visit <a href=\"https://docs.minio.io/\">here</a></p>\n<h2>Introduction</h2>\n<p>This chart bootstraps MinIO deployment on a <a href=\"http://kubernetes.io\">Kubernetes</a> cluster using the <a href=\"https://helm.sh\">Helm</a> package manager.</p>\n<h2>Configuration</h2>\n<p>The following table lists the configurable parameters of the MinIO chart and their default values.</p>\n<p>| Parameter                                        | Description                                                                                                                             | Default                          |\n|:-------------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------|\n| <code>image.repository</code>                               | Image repository                                                                                                                        | <code>minio/minio</code>                    |\n| <code>image.tag</code>                                      | MinIO image tag. Possible values listed <a href=\"https://hub.docker.com/r/minio/minio/tags/\">here</a>.                                             | <code>RELEASE.2020-11-06T23-17-07Z</code>   |\n| <code>image.pullPolicy</code>                               | Image pull policy                                                                                                                       | <code>IfNotPresent</code>                   |\n| <code>extraArgs</code>                                      | Additional command line arguments to pass to the MinIO server                                                                           | <code>[]</code>                             |\n| <code>accessKey</code>                                      | Default access key (5 to 20 characters)                                                                                                 | random 20 chars                  |\n| <code>secretKey</code>                                      | Default secret key (8 to 40 characters)                                                                                                 | random 40 chars                  |\n| <code>persistence.enabled</code>                            | Use persistent volume to store data                                                                                                     | <code>true</code>                           |\n| <code>persistence.size</code>                               | Size of persistent volume claim                                                                                                         | <code>500Gi</code>                          |\n| <code>persistence.existingClaim</code>                      | Use an existing PVC to persist data                                                                                                     | <code>nil</code>                            |\n| <code>persistence.storageClass</code>                       | Storage class name of PVC                                                                                                               | <code>nil</code>                            |\n| <code>persistence.accessMode</code>                         | ReadWriteOnce or ReadOnly                                                                                                               | <code>ReadWriteOnce</code>                  |\n| <code>persistence.subPath</code>                            | Mount a sub directory of the persistent volume if set                                                                                   | <code>\"\"</code>                             |\n| <code>environment</code>                                    | Set MinIO server relevant environment variables in <code>values.yaml</code> file. MinIO containers will be passed these variables when they start. | <code>MINIO_STORAGE_CLASS_STANDARD: EC:4\"</code> |</p>\n<p>Some parameters above map to the env variables defined in the <a href=\"https://hub.docker.com/r/minio/minio/\">MinIO DockerHub image</a>.</p>\n<h2>Pass environment variables to MinIO containers</h2>\n<p>To pass environment variables to MinIO containers when deploying via Helm chart, use the below command line format</p>\n<p><code>bash\n$ helm install --set environment.MINIO_BROWSER=on,environment.MINIO_DOMAIN=domain-name minio/minio</code></p>\n<p>You can add as many environment variables as required, using the above format. Just add <code>environment.&lt;VARIABLE_NAME&gt;=&lt;value&gt;</code> under <code>set</code> flag.</p>\n<p><strong>NOTE</strong>\n- On fresh installation, minIO data directory's ownership will be updated to minio:minio.\n- For existing installations that are exhibiting the upgrade to &gt;=1.5.0, the minIO data directory's ownership will be migrated to minio:minio.</p>",
        "changelog": "<h1>Change Log</h1>\n<p>This contains all the notable changes to the MinIO application.</p>\n<h2>[1.5.0]</h2>\n<ol>\n<li>On fresh installation, minIO data directory's ownership will be updated to minio:minio.</li>\n<li>For existing installations that are exhibiting the upgrade, the minIO data directory's ownership will be migrated to minio:minio.</li>\n</ol>\n<h2>[1.6.2]</h2>\n<ol>\n<li>Users with existing instances are advised to not update to the newer version.\n  MinIO released a major version change with no backwards compatibility.\n  In order to use newer versions of MinIO, a manual migration is needed.\n  For more information, visit https://min.io/docs/minio/linux/operations/install-deploy-manage/migrate-fs-gateway.html</li>\n</ol>"
    }
}