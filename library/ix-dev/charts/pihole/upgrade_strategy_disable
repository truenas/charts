#!/usr/bin/python3
import json
import re
import sys

from catalog_update.upgrade_strategy import semantic_versioning


RE_STABLE_VERSION = re.compile(r'\d+\.\d+\.\d+')


def newer_mapping(image_tags):
    key = list(image_tags.keys())[0]
    tags = {t: t for t in image_tags[key] if RE_STABLE_VERSION.fullmatch(t)}
    version = semantic_versioning(list(tags))
    if not version:
        return {}

    parts = version.split('.')

    # Versioning scheme:
    # Must be x.y.z
    # Second part has leading 0 if not 0
    # Third part does not have leading 0

    # Below we make sure the above conditions are met
    # as the semantic_versioning function modifies the version

    if len(parts) < 3:
        return {}

    if parts[1] != '0':
        parts[1] = '0' + parts[1]

    version = '.'.join(parts)

    return {
        'tags': {key: tags[version]},
        'app_version': version,
    }


if __name__ == '__main__':
    try:
        versions_json = json.loads(sys.stdin.read())
    except ValueError:
        raise ValueError('Invalid json specified')

    print(json.dumps(newer_mapping(versions_json)))
