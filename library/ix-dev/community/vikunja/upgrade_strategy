#!/usr/bin/python3
import json
import re
import sys

from catalog_update.upgrade_strategy import semantic_versioning


RE_STABLE_VERSION = re.compile(r'\d+\.\d+\.\d+')
ENUMS = {
    'image': {
        'RE_STABLE_VERSION': RE_STABLE_VERSION,
    },
    'frontendImage': {
        'RE_STABLE_VERSION': RE_STABLE_VERSION,
    },
    'nginxImage': {
        'RE_STABLE_VERSION': RE_STABLE_VERSION,
    },
}


def newer_mapping(image_tags):
    output = {
        "tags": {},
        "app_version": ""
    }

    for key in image_tags.keys():
        RE_STABLE_VERSION = ENUMS[key].get('RE_STABLE_VERSION', None) if key in ENUMS else None
        if (RE_STABLE_VERSION is None):
            continue

        tags = {t: t for t in image_tags[key] if RE_STABLE_VERSION.fullmatch(t)}
        version = semantic_versioning(list(tags))

        if not version:
            continue

        if key == 'image':
            output['app_version'] = version

        output['tags'][key] = tags[version]

    return output


if __name__ == '__main__':
    try:
        versions_json = json.loads(sys.stdin.read())
    except ValueError:
        raise ValueError('Invalid json specified')

    print(json.dumps(newer_mapping(versions_json)))
