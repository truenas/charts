image:
  repository: altran1502/immich-server
  pullPolicy: IfNotPresent
  tag: v1.85.0

webImage:
  repository: altran1502/immich-web
  pullPolicy: IfNotPresent
  tag: v1.85.0

proxyImage:
  repository: altran1502/immich-proxy
  pullPolicy: IfNotPresent
  tag: v1.85.0

mlImage:
  repository: altran1502/immich-machine-learning
  pullPolicy: IfNotPresent
  tag: v1.85.0

typesenseImage:
  repository: typesense/typesense
  pullPolicy: IfNotPresent
  tag: 0.25.1

resources:
  limits:
    cpu: 4000m
    memory: 8Gi

immichGPU: {}

immichConfig:
  publicLoginMessage: ''
  enableML: true
  enableTypesense: true

immichNetwork:
  webuiPort: 30041
  # Not user configurable, will be hidden on UI
  # Putting it here in case it needs to be configurable
  # in the future.
  serverPort: 32000
  webPort: 32001
  machinelearningPort: 32002
  microservicesPort: 32003
  typesensePort: 32004

immichStorage:
  uploads:
    type: ixVolume
    datasetName: uploads
  library:
    type: ixVolume
    datasetName: library
  thumbs:
    type: ixVolume
    datasetName: thumbs
  profile:
    type: ixVolume
    datasetName: profile
  video:
    type: ixVolume
    datasetName: video
  additionalLibraries: []
  pgData:
    type: ixVolume
    datasetName: pgData
  pgBackup:
    type: ixVolume
    datasetName: pgBackup

notes:
  custom: |
    ## Database
    You can connect to the database using the pgAdmin App from the catalog

    <details>
      <summary>Database Details</summary>

      - Database: `immich`
      - Username: `immich`
      - Password: `{{ .Values.immichDbPass }}`
      - Host:     `{{ .Values.immichDbHost }}.{{ .Release.Namespace }}.svc.cluster.local`
      - Port:     `5432`

    </details>
    {{- $_ := unset .Values "immichDbPass" }}
    {{- $_ := unset .Values "immichDbHost" }}
