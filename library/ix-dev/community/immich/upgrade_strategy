#!/usr/bin/python3
import json
import re
import sys

from catalog_update.upgrade_strategy import semantic_versioning


ENUMS = {
    'typesenseImage': {
        'RE_STABLE_VERSION': re.compile(r'[0-9]+\.[0-9]+\.[0-9]+'),
        'STRIP_TEXT': ''
    },
    'default': {
        'RE_STABLE_VERSION': re.compile(r'v[0-9]+\.[0-9]+\.[0-9]+'),
        'STRIP_TEXT': 'v'
    }
}


def newer_mapping(image_tags):

    output = {
        "tags": {},
        "app_version": ""
    }

    for key in image_tags.keys():
        STRIP_TEXT = ENUMS[key]['STRIP_TEXT'] if key in ENUMS else ENUMS['default']['STRIP_TEXT']
        RE_STABLE_VERSION = ENUMS[key]['RE_STABLE_VERSION'] if key in ENUMS else ENUMS['default']['RE_STABLE_VERSION']
        tags = {t.strip(STRIP_TEXT): t for t in image_tags[key] if RE_STABLE_VERSION.fullmatch(t)}

        version = semantic_versioning(list(tags))

        if not version:
            continue

        if key == 'image':
            output['app_version'] = version

        output['tags'][key] = tags[version]

    return output


if __name__ == '__main__':
    try:
        versions_json = json.loads(sys.stdin.read())
    except ValueError:
        raise ValueError('Invalid json specified')

    print(json.dumps(newer_mapping(versions_json)))
