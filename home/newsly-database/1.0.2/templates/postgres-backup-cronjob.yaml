{{if .Values.newslyBackupCronJob.enabled }}

apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Chart.Name }}-cronjob
spec:
  schedule: "{{ .Values.newslyCronjob.schedule }}"
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 2
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: {{ .Chart.Name }}-backup-cronjob
            image: "{{.Values.dbimage.repository }}:{{.Values.dbimage.tag }}"
            env:
              - name: DB_USER
                valueFrom:
                  secretKeyRef:
                    name: db-details
                    key: db-user
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: db-details
                    key: db-password
              - name: DB_NAME
                value: "{{ .Values.newslyDatabase.dbname }}"
              - name: DB_PORT
                value: "{{ .Values.newslyDatabase.port }}"
              - name: DB_HOST
                value: "10.2.20.25"
            command:
              - "/bin/bash"
              - "-c"
              - |
                TIMESTAMP=$(date +\%Y-\%m-\%dT\%H:\%M:\%S)
                PGPASSWORD=$DB_PASSWORD pg_dump -h $DB_HOST -p $DB_PORT -U $DB_USER $DB_NAME > /tmp/backups/databasename-${TIMESTAMP}.sql
            
            
          restartPolicy: OnFailure
{{ end }}
